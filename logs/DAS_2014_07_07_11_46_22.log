DASConnexion: APPEL GET INSTANCE :: DASCONNEXION
MessageReceiver: Sujet = 'getChaineParser' or Sujet = 'insertLot' or Sujet = 'insertMvt' or Sujet = 'getWorkstationWithId' or Sujet = 'getGraphConfigsWithWsId' or Sujet = 'getBalancesWithWs' or Sujet = 'getLotWithSSCC' or Sujet = 'getProductsWithComingFrom' or Sujet = 'getProductWithId' or Sujet = 'getWsGenericsWithId' or Sujet = 'getWsGenericsWithIdOrWithout' or Sujet = 'getWsArticlesWithId' or Sujet = 'getDependsWithParentsAndDM' or Sujet = 'getDataModelWithId' or Sujet = 'getSubjectList' or Sujet = 'getFctConfigsWithWsId' or Sujet = 'getAcquisitionMethodWithId' or Sujet = 'getWsSsccWithId' or Sujet = 'getListDataModel' or Sujet = 'getListEan128' or Sujet = 'getListTemplateReport' or Sujet = 'getListTemplateSupervision' or Sujet = 'getWsConfig_workstationID'
DASConnexion: APPEL GET INSTANCE :: DASCONNEXION
MessageReceiver: LISTENER SETTED
MessageReceiver: Connecting receiver to URL: tcp://127.0.0.1:61616
MessageReceiver: Consuming queue : DAS_SERVER
MessageSender: Connecting sender to URL: tcp://127.0.0.1:61616
MessageSender: Using persistent messages and queue
Start: OpenDAS Server starts with configuration file: config/das_server.conf
MessageController: Passage by onMessage
MessageController :: Passage par route Message :ActiveMQObjectMessage {commandId = 5, responseRequired = false, messageId = ID:opendas-vm-56164-1404726408880-0:0:1:1:1, originalDestination = null, originalTransactionId = null, producerId = ID:opendas-vm-56164-1404726408880-0:0:1:1, destination = queue://DAS_SERVER, transactionId = null, expiration = 0, timestamp = 1404726409111, arrival = 0, brokerInTime = 1404726409111, brokerOutTime = 1404726409115, correlationId = null, replyTo = null, persistent = false, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@435a3a, marshalledProperties = org.apache.activemq.util.ByteSequence@1d8c528, dataStructure = null, redeliveryCounter = 0, size = 0, properties = {Station=GET, Sujet=getSubjectList}, readOnlyProperties = true, readOnlyBody = true, droppable = false}
MessageController: Subject = getSubjectList
MessageController :: Passage par route ObjectMessage :ActiveMQObjectMessage {commandId = 5, responseRequired = false, messageId = ID:opendas-vm-56164-1404726408880-0:0:1:1:1, originalDestination = null, originalTransactionId = null, producerId = ID:opendas-vm-56164-1404726408880-0:0:1:1, destination = queue://DAS_SERVER, transactionId = null, expiration = 0, timestamp = 1404726409111, arrival = 0, brokerInTime = 1404726409111, brokerOutTime = 1404726409115, correlationId = null, replyTo = null, persistent = false, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@435a3a, marshalledProperties = org.apache.activemq.util.ByteSequence@1d8c528, dataStructure = null, redeliveryCounter = 0, size = 0, properties = {Station=GET, Sujet=getSubjectList}, readOnlyProperties = true, readOnlyBody = true, droppable = false}
MessageController: Message received : ServerRequest [attachement=null, fromUrl=TALEND, sendUrl=DAS_SERVER, title=getSubjectList, sendedDate=Mon Jul 07 11:46:49 CEST 2014, previousRequest=null]
MessageController: TITLE ====>getSubjectList
MessageSender: Message send having for subject: GET
MessageSender: Sending message: ServerRequest [attachement=[getWsGenericsExt, groups], fromUrl=DAS_SERVER, sendUrl=TALEND, title=null, sendedDate=Mon Ju...
